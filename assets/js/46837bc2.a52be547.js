"use strict";(globalThis.webpackChunkangular_bootcamp=globalThis.webpackChunkangular_bootcamp||[]).push([[4510],{3942:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","href":"/angular-bootcamp/docs/di","label":"Dependency Injection in Angular","docId":"di","unlisted":false},{"type":"link","href":"/angular-bootcamp/docs/rxjs","label":"RxJS in Angular","docId":"rxjs","unlisted":false},{"type":"link","href":"/angular-bootcamp/docs/pipe","label":"Pipe, (TODO)","docId":"pipe","unlisted":false}]},"docs":{"di":{"id":"di","title":"Dependency Injection in Angular","description":"\\"DI\\" is a design pattern and mechanism for creating and delivering some parts of an app to other parts of an app that require them.","sidebar":"tutorialSidebar"},"pipe":{"id":"pipe","title":"Pipe, (TODO)","description":"","sidebar":"tutorialSidebar"},"rxjs":{"id":"rxjs","title":"RxJS in Angular","description":"RxJS (Reactive Extensions for JavaScript) is a library for reactive programming using Observables, which makes it easier to compose asynchronous or callback-based code. In Angular, RxJS is used extensively for handling asynchronous operations, such as HTTP requests, event handling, and more.","sidebar":"tutorialSidebar"}}}}')}}]);