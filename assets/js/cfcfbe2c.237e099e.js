"use strict";(globalThis.webpackChunkangular_bootcamp=globalThis.webpackChunkangular_bootcamp||[]).push([[5065],{8790:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"di","title":"Dependency Injection in Angular","description":"\\"DI\\" is a design pattern and mechanism for creating and delivering some parts of an app to other parts of an app that require them.","source":"@site/docs/di.md","sourceDirName":".","slug":"/di","permalink":"/angular-bootcamp/docs/di","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"RxJS in Angular","permalink":"/angular-bootcamp/docs/rxjs"}}');var o=t(4848),a=t(8453);const i={sidebar_position:1},s="Dependency Injection in Angular",c={},p=[];function l(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"dependency-injection-in-angular",children:"Dependency Injection in Angular"})}),"\n",(0,o.jsx)(n.p,{children:'"DI" is a design pattern and mechanism for creating and delivering some parts of an app to other parts of an app that require them.'}),"\n",(0,o.jsx)(n.p,{children:"Mostly used to provide services to components or other services."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// means this inject at root level by default\n@Injectable({\n  providedIn: 'root' // tree-shakable providers known for compiler/bundler\n})\nclass ApiService {}\n\n\n// Inject at module level, all components and services under this module can use it\n@NgModule({\n  providers: [ApiService] // this inject at module level and its children\n  Declarations: [...],\n  Imports: [...],\n})\nclass AppModule {}\n\n// At component level\n@Component({\n  selector: 'share-com',\n  template: '...',\n  providers: [ApiService] // this inject at component level and its children\n})\nclass ShareCom {}\n\n\n// Usage in component\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  // new version\n  // import { inject } from \"@angular/core\";\n  // const apiService = inject(ApiService);\n\n  constructor(private apiService: ApiService) {} // inject service here\n}\n\n\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);